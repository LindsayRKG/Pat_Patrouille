// ============================================
// CONFIGURATION - PAT_PATROUILLE
// ============================================

const CONFIG = {
  "portfolio": {


    "title": "Portfolio Groupe - Git & GitHub Mastery",
    "description": "Un projet collaboratif r√©volutionnaire pr√©sentant la ma√Ætrise de Git et GitHub",
    "version": "1.0.0",
    "author": "Pat'patrouille",
    "year": 2025

  },
  "team": {
    "members": [
      {
        "id": 1,

        "name": "Chef de Projet",
        "role": "Coordinateur Principal",
        "description": "Gestion des op√©rations et strat√©gie globale",
        "skills": ["Strat√©gie", "Gestion", "Coordination"],
        "avatar": "CD"
      },
      {
        "id": 2,
        "name": "Expert S√©curit√©", 
        "role": "Dev Cybers√©curit√©",
        "description": "S√©curisation des donn√©es et infrastructures",
        "skills": ["S√©curit√©", "Cryptographie", "Audit"],
        "avatar": "DS"
      },
      {
        "id": 3,
        "name": "Dev Frontend",
        "role": "Interface Utilisateur",
        "description": "Exp√©rience utilisateur et design responsive",
        "skills": ["UI/UX", "React", "Mobile"],
        "avatar": "DF"
      },
      {
        "id": 4,
        "name": "Dev Backend",
        "role": "Architecture Syst√®me", 
        "description": "Infrastructure serveur et bases de donn√©es",
        "skills": ["API", "Database", "Cloud"],
        "avatar": "DB"
      },
      {
        "id": 5,
        "name": "Quality Assurance",
        "role": "Tests & Validation",
        "description": "Contr√¥le qualit√© et tests de performance",
        "skills": ["Tests", "Performance", "Validation"],
        "avatar": "QA"

      }
    ]
  },
  "project": {
    "phases": [
      {
        "number": 1,
        "title": "Surveillance Temps R√©el",
        "description": "Monitoring avanc√© avec alertes instantan√©es et tableau de bord interactif.",
        "icon": "üéØ"
      },
      {
        "number": 2, 
        "title": "Interface Mobile",
        "description": "Application responsive pour le terrain avec synchronisation cloud.",
        "icon": "üì±"
      },
      {
        "number": 3,
        "title": "S√©curit√© Renforc√©e",
        "description": "Chiffrement des donn√©es et authentification multi-facteurs.",
        "icon": "üîí"
      },
      {
        "number": 4,
        "title": "Analytiques Avanc√©s", 
        "description": "Rapports d√©taill√©s et pr√©dictions bas√©es sur l'IA.",
        "icon": "üìà"
      },
      {
        "number": 5,
        "title": "Int√©gration API",
        "description": "Connexion avec les syst√®mes existants et extensibilit√© maximale.",
        "icon": "üîÑ"
      }
    ]
  },
  "skills": [
    {
      "name": "D√©veloppement Frontend",
      "percentage": 95
    },
    {
      "name": "Architecture Backend", 
      "percentage": 92
    },
    {
      "name": "S√©curit√© Informatique",
      "percentage": 88
    },
    {
      "name": "Bases de Donn√©es",
      "percentage": 90
    },
    {
      "name": "Cloud & DevOps",
      "percentage": 85
    },
    {
      "name": "Mobile & Responsive",
      "percentage": 94
    }
  ],
  "statistics": {
    "availability": "99.9%",
    "features": 50,
    "support": "24/7", 
    "expertise": 5,
    "latency": "100ms",
    "security": "A+"
  },
  "timeline": [
    {
      "phase": "Phase 1: Analyse",
      "description": "√âtude des besoins et conception architecturale"
    },
    {
      "phase": "Phase 2: D√©veloppement", 
      "description": "Impl√©mentation des modules principaux"
    },
    {
      "phase": "Phase 3: S√©curisation",
      "description": "Int√©gration des protocoles de s√©curit√©"
    },
    {
      "phase": "Phase 4: Tests",
      "description": "Validation et optimisation des performances" 
    },
    {
      "phase": "Livraison",
      "description": "D√©ploiement et formation des utilisateurs"
    }
  ],
  "contact": {
    "email": "contact@patpatrouille.com",
    "website": "www.patpatrouille.com", 
    "phone": "+33 1 23 45 67 89"
  },
  "theme": {
    "current": "light",
    "darkMode": true,
    "autoSwitch": false
  },
  "features": {
    "animations": true,
    "notifications": true, 
    "smoothScroll": true,
    "formValidation": true
  }
};

// ============================================
// FONCTIONS D'ACC√àS √Ä LA CONFIG
// ============================================

class ConfigManager {
  static get(path, defaultValue = null) {
    const keys = path.split('.');
    let result = CONFIG;
    
    for (const key of keys) {
      if (result && typeof result === 'object' && key in result) {
        result = result[key];
      } else {
        return defaultValue;
      }
    }
    
    return result !== undefined ? result : defaultValue;
  }
  
  static set(path, value) {
    const keys = path.split('.');
    let current = CONFIG;
    
    for (let i = 0; i < keys.length - 1; i++) {
      const key = keys[i];
      if (!(key in current) || typeof current[key] !== 'object') {
        current[key] = {};
      }
      current = current[key];
    }
    
    current[keys[keys.length - 1]] = value;
    return true;
  }
  
  static getAll() {
    return JSON.parse(JSON.stringify(CONFIG));
  }
}

// ============================================
// EXPORT ET INITIALISATION  
// ============================================

// Export pour Node.js
if (typeof module !== 'undefined' && module.exports) {
  module.exports = { CONFIG, ConfigManager };
} 
// Export pour le navigateur
else {
  window.APP_CONFIG = CONFIG;
  window.ConfigManager = ConfigManager;
  
  // Initialisation automatique
  document.addEventListener('DOMContentLoaded', function() {
    console.log('Configuration PAT_PATROUILLE charg√©e:', CONFIG.portfolio.title, 'v' + CONFIG.portfolio.version);
  });
}

// ============================================
// UTILITAIRES
// ============================================

const ConfigUtils = {
  // V√©rifier si une fonctionnalit√© est activ√©e
  isFeatureEnabled(featurePath) {
    return ConfigManager.get(`features.${featurePath}`, false);
  },
  
  // Obtenir les membres de l'√©quipe
  getTeamMembers() {
    return ConfigManager.get('team.members', []);
  },
  
  // Obtenir les phases du projet
  getProjectPhases() {
    return ConfigManager.get('project.phases', []);
  },
  
  // Obtenir les comp√©tences
  getSkills() {
    return ConfigManager.get('skills', []);
  },
  
  // Obtenir la configuration du th√®me
  getThemeConfig() {
    return ConfigManager.get('theme', {});
  },
  
  // V√©rifier si le dark mode est activ√©
  isDarkModeEnabled() {
    return ConfigManager.get('theme.darkMode', false);
  }
};